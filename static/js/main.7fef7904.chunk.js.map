{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Contact/Contact.module.css","Components/Contacts/Contacts.module.css","Components/Container/Container.module.css","Components/Container/Container.js","redux/selectors.js","redux/actions.js","redux/operation.js","Components/ContactsForm/ContactsForm.js","Components/Filter/Filter.js","Components/Contact/Contact.js","Components/Contacts/Contacts.js","App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactsForm/ContactsForm.module.css"],"names":["module","exports","Container","children","className","style","container","getContacts","state","contacts","item","getVisibleContacts","createSelector","filter","value","normalizeFilter","toLowerCase","name","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","Form","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","event","currentTarget","styles","form","onSubmit","preventDefault","map","contact","alert","post","then","data","catch","error","addContact","label","input","type","pattern","title","required","onChange","btn","Filter","target","Contact","onDeleteContact","onClick","Contacts","id","contactId","delete","list","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fef7904.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2E1Du\",\"label\":\"Filter_label__wdgTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__3AwKY\",\"btn\":\"Contact_btn__2mXUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__Cmw_v\",\"item\":\"Contacts_item__1rNs6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tPa4\"};","import React from 'react';\r\nimport style from'./Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.item;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getError = state => state.contacts.error;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, value) => {\r\n        const normalizeFilter = value.toLowerCase();\r\n        return contacts.filter(({name}) =>\r\n            name.toLowerCase().includes(normalizeFilter),\r\n        );\r\n    },\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/filterContact');\r\n","import axios from 'axios';\r\nimport { addContactError, addContactRequest, addContactSuccess, deleteContactError, deleteContactRequest, deleteContactSuccess, fetchContactError, fetchContactRequest, fetchContactSuccess } from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n        .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/selectors\";\r\nimport { addContact } from '../../redux/operation';\r\nimport styles from './ContactsForm.module.css';\r\n\r\nexport default function Form () {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getContacts);\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const hadleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!name || !number) {\r\n            return;\r\n        }\r\n\r\n        if (contacts.map(contact => contact.name).includes(name)) {\r\n            alert(`${name} is already in contacs.`)\r\n        }\r\n\r\n        dispatch(addContact({ name, number }));\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n    \r\n        return (\r\n            <form className={styles.form} onSubmit={hadleSubmit}>\r\n                <label className={styles.label}>\r\n                Name\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n                </label>\r\n\r\n                <label className={styles.label}>\r\n                Number\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                />\r\n                </label>\r\n\r\n                <button className={styles.btn} type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }","import { useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/actions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = event => dispatch(filterContact(event.target.value));\r\n\r\n\r\nreturn (\r\n\r\n    <label className={styles.label}>Find contacts by name\r\n        <input className={styles.input} type=\"text\"  onChange={onChange} />\r\n    </label>\r\n\r\n)\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Contact.module.css';\r\n\r\nconst Contact = ({name, number, onDeleteContact}) => (  \r\n    <>\r\n        <p className={style.name}>\r\n            {name}: <span>{number}</span>\r\n        </p>\r\n        <button className={style.btn} onClick={onDeleteContact}>\r\n            Delete\r\n        </button>\r\n    </>\r\n);\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/operation';\r\nimport { getVisibleContacts } from '../../redux/selectors'; \r\nimport Contact from '../Contact/Contact';\r\nimport style from './Contacts.module.css';\r\n\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n        <ul className={style.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.item}>\r\n                <Contact\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={() => onDeleteContact(id)}\r\n                    />\r\n            </li>\r\n        ))}\r\n        \r\n    </ul>\r\n    )\r\n    \r\n};\r\n\r\nexport default Contacts;","import Container from './Components/Container';\r\nimport Form from './Components/ContactsForm';\r\nimport Filter from './Components/Filter';\r\nimport Contacts from './Components/Contacts';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n\r\n      <Form />\r\n\r\n      <h2>Contacts</h2>\r\n\r\n      <Filter />\r\n\r\n      <Contacts />\r\n        \r\n    </Container>\r\n  )\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport  { addContactError, addContactRequest, addContactSuccess, deleteContactError, deleteContactRequest, deleteContactSuccess, fetchContactError, fetchContactRequest, fetchContactSuccess, filterContact } from './actions';\r\n\r\nconst item = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({id}) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n    item,\r\n    filter,\r\n    loading,\r\n    error,\r\n});","import contactsReducer from './reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3bkfJ\",\"label\":\"ContactsForm_label__eeqkm\",\"input\":\"ContactsForm_input__Bb2FX\",\"btn\":\"ContactsForm_btn__rKQ8s\"};"],"sourceRoot":""}